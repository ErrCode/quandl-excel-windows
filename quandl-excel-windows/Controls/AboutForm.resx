<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>