//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quandl.Excel.Addin.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Specify how you would like to filter data with any of the options below or none.")]
        public string DatatableFilterNoteOne {
            get {
                return ((string)(this["DatatableFilterNoteOne"]));
            }
            set {
                this["DatatableFilterNoteOne"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("If you skip this step, then you will receive all of the data for the for the colu" +
            "mns you have selected previously.")]
        public string DatatableFilterNoteTow {
            get {
                return ((string)(this["DatatableFilterNoteTow"]));
            }
            set {
                this["DatatableFilterNoteTow"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Select the {0} you want to see the data for.")]
        public string DatatableFilterDateRange {
            get {
                return ((string)(this["DatatableFilterDateRange"]));
            }
            set {
                this["DatatableFilterDateRange"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Type in the {0} that you would like to filter on. Separate each item with a comma" +
            ".")]
        public string DatatableFilterTicker {
            get {
                return ((string)(this["DatatableFilterTicker"]));
            }
            set {
                this["DatatableFilterTicker"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Enter in the {0} that you would like the data for.")]
        public string DatatableFilterFloatNumber {
            get {
                return ((string)(this["DatatableFilterFloatNumber"]));
            }
            set {
                this["DatatableFilterFloatNumber"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Enter in the {0} that you would like the data for.")]
        public string DatatableFilterIntegerNumber {
            get {
                return ((string)(this["DatatableFilterIntegerNumber"]));
            }
            set {
                this["DatatableFilterIntegerNumber"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\"{0}\" is not a valid code.")]
        public string DataCodeValidationMessage {
            get {
                return ((string)(this["DataCodeValidationMessage"]));
            }
            set {
                this["DataCodeValidationMessage"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Please check your API key.")]
        public string SettingsInValidApiKey {
            get {
                return ((string)(this["SettingsInValidApiKey"]));
            }
            set {
                this["SettingsInValidApiKey"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Your username or password is incorrect.")]
        public string SettingsIncorrectUsernameOrPassword {
            get {
                return ((string)(this["SettingsIncorrectUsernameOrPassword"]));
            }
            set {
                this["SettingsIncorrectUsernameOrPassword"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Invalid login credentials.")]
        public string SettingsIncorrectCredentials {
            get {
                return ((string)(this["SettingsIncorrectCredentials"]));
            }
            set {
                this["SettingsIncorrectCredentials"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Something went wrong. Please try again later.")]
        public string SettingsSomethingWrongTryLater {
            get {
                return ((string)(this["SettingsSomethingWrongTryLater"]));
            }
            set {
                this["SettingsSomethingWrongTryLater"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Are you sure you want to save?")]
        public string SettingsSaveWarning {
            get {
                return ((string)(this["SettingsSaveWarning"]));
            }
            set {
                this["SettingsSaveWarning"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Save Confirmation")]
        public string SettingsSaveConfirmation {
            get {
                return ((string)(this["SettingsSaveConfirmation"]));
            }
            set {
                this["SettingsSaveConfirmation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("New version available for download")]
        public string CheckUpdateNewUpatateAvailable {
            get {
                return ((string)(this["CheckUpdateNewUpatateAvailable"]));
            }
            set {
                this["CheckUpdateNewUpatateAvailable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("No update available for download")]
        public string CheckUpdateNoUpatateAvailable {
            get {
                return ((string)(this["CheckUpdateNoUpatateAvailable"]));
            }
            set {
                this["CheckUpdateNoUpatateAvailable"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Release Note for {0}")]
        public string CheckUpdatesReleaseNoteTitle {
            get {
                return ((string)(this["CheckUpdatesReleaseNoteTitle"]));
            }
            set {
                this["CheckUpdatesReleaseNoteTitle"] = value;
            }
        }
    }
}
